@page "/chat"
@using Microsoft.AspNetCore.SignalR.Client
@using ChatModels
@rendermode InteractiveWebAssembly
@inject NavigationManager NavManager
<PageTitle>Chat App</PageTitle>


<div class="row">
    <div class="col-lg-7">
        <div class="card">
            <div class="card-header">DayımChat</div>
            <div class="card-body">
                <ul class="list-group">
                    @foreach(var chat in Chats)
                    {
                        <li class="list-group-item mb-2">
                            @chat.DateTime.Date.ToString("dd/MMM/yy")
                            <br />
                            <span class="fw-bold">@chat.UserName:</span>
                            <br />
                            @chat.Message
                        </li>
                    }
                </ul>
                <div class="mt-3">
                    <EditForm Model="Chat" OnValidSubmit="SendMessageClicked">
                        <DataAnnotationsValidator />
                        <div class="vstack gap-1">
                            <InputText @bind-Value="Chat.UserName" class="form-control w-25" placeholder="Adınız" />
                            <InputTextArea @bind-Value="Chat.Message" class="form-control" placeholder="Mesaj" />
                        </div>
                        <button class="float-end btn btn-success mt-3" type="submit"> Gönder</button>
                    </EditForm>
                </div>
            </div>
            <div class="card-footer">
                @if(!IsConnected)
                {
                    <div class="alert alert-danger">Chat Disconnected</div>
                }
                else
                {
                    <div class="alert alert-success">Sohbet Bağlandı</div>
                }
            </div>
        </div>
    </div>
</div>
@code {
    public static string? StoredUserName { get; set; }
    private HubConnection? hubConnection;
    private List<Chat> Chats = [];

    private Chat Chat = new();

    protected async override Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
        .WithUrl(NavManager.ToAbsoluteUri("/chathub"))
        .Build();

        hubConnection.On<Chat>("ReceiveMessage", (Chat) =>
        {
            Chats.Add(Chat);
            InvokeAsync(() => StateHasChanged());
        });

        await hubConnection.StartAsync();
    }

    private bool IsConnected =>
    hubConnection!.State == HubConnectionState.Connected;

    void Send()
    {
        Chat.UserName ??= StoredUserName;
        hubConnection!.SendAsync("SendMessage", Chat);
    }

    void SendMessageClicked()
    {
        Chat.DateTime = DateTime.Now;
        if (Chat.UserName != "")
            StoredUserName = Chat.UserName;

        Send();        
        Chat.Message = null;        
    }
}
